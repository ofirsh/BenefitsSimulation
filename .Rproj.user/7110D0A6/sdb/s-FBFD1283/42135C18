{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n# \n# http://www.rstudio.com/shiny/\n#\n# attach(mtcars)\nlibrary(shiny)\nsource(\"cutoff.R\")\n\nbenefits <- round(seq(from = 100, to = 500, length.out = 20))\ntrainingPeriod <- 1:6\n\nshinyServer(function(input, output) {\n   \n  \n  output$attritionrate <- renderText({signif(cutoff(100,500,input$maxattrition,input$bensaturation,input$benefits),2)})\n    \n  output$distPlot <- renderPlot({\n\n    attrition <- cutoff(100,500,input$maxattrition,input$bensaturation,benefits)\n    currentAttrition <- cutoff(100,500,input$maxattrition,input$bensaturation,input$benefits)\n    \n    nTrainingMonths <- input$trainingperiod\n    \n      \n    par(mfrow = c(2,2))\n    # layout(mat = c(1:3), widths = 2, heights = 2)\n    # par(mfrow = c(3,1))\n    \n    plot(attrition ~ benefits, lwd = 3, col = \"cyan\", main = \"Attrition vs. Benefits\", xlab = \"benefits($)\", ylab = \"attrition(%)\")\n    lines(benefits,attrition, col = \"blue\")\n    \n    benefitsCost <- input$numberee * input$benefits\n    # assuming 3 months training and given attrition rate based on benefits\n    attritionCost <- input$salary * nTrainingMonths * input$numberee * (currentAttrition / 100)\n    overallCost <- benefitsCost + attritionCost\n    \n#     cat(\"benefit cost\")\n#     cat(benefitsCost)\n#     cat(\"attrition cost\")\n#     cat(attritionCost)\n    \n    cost <- matrix(c(attritionCost,benefitsCost), ncol = 1)\n    rownames(cost) <- c('Attrition', 'Benefits')\n    colnames(cost) <- c(\"Cost\")\n    cost.table <- as.table(cost)\n    barplot(cost.table, main=\"Cost breakdown\",xlab=\"\", ylab = \"$\", col=c(\"darkblue\",\"red\"),legend = rownames(cost.table))\n    \n    # vector data on benefits cost and attrition cost across \n    benefitsCostV <- input$numberee * benefits\n    attritionCostV <- input$salary * nTrainingMonths * input$numberee * (attrition / 100)\n    totalCostV <- benefitsCostV + attritionCostV\n\n    plot(benefitsCostV ~ benefits,col = \"red\", main = \"Cost vs. Benefits\", xlab = \"benefits($)\", ylab = \"cost($)\")\n    lines(benefits,benefitsCostV, col = \"red\", lwd = 3)\n    points(benefits,attritionCostV, col = \"blue\")\n    lines(benefits,attritionCostV, col = \"blue\",lwd = 3)\n    points(benefits,totalCostV, col = \"purple\")\n    lines(benefits,totalCostV, col = \"purple\",lwd = 3)\n\n    minBenefitsIndex <- which.min(totalCostV)\n    minBenefits <- benefits[minBenefitsIndex]\n    minBenefitsCost <- totalCostV[minBenefitsIndex]\n\n    abline(v=minBenefits,col = \"cyan\", lty = \"dashed\", lwd = 1)\n    symbols(minBenefits,minBenefitsCost,circles=20, fg = \"darkorange\", inches = FALSE, add=TRUE, lwd = 2)\n    # arrows(x1=minBenefits,y1=minBenefitsCost,angle=45, code=2, col = \"darkorange\")\n\n\n#     cat(\"\\n minBenefitsIndex \\n\",minBenefitsIndex)\n#     cat(\"\\n minBenefits \\n\",minBenefits)\n#     cat(\"\\n minBenefitsCost \\n\",minBenefitsCost)\n\n\n\n\n    # symbols(minBenefits,minBenefitsCost,50, add=TRUE)\n    \n\n#     cat(\"\\nbenefits\\n\",benefits)\n#     cat(\"\\nlength(benefits)\\n\",length(benefits))\n#     cat(\"\\nbenefitsCostV\\n\",benefitsCostV)\n#     cat(\"\\nattritionCostV\\n\",attritionCostV)\n#     cat(\"\\ntotalCostV\\n\",totalCostV)\n#     cat(\"\\ncostV\\n\",costV)\n#     cat(\"\\ncostV.table\\n\",costV.table)\n\n# barplot(costV.table, main=\"Cost breakdown\",xlab=\"\", ylab = \"$\", col=c(\"darkblue\",\"red\"))\n\n\n#     costV <- matrix(c(attritionCostV,benefitsCostV), ncol = length(benefits))\n#     colnames(costV) <- c(benefits)\n#     costV.table  <- as.table(costV)\n\n    \n\n    \n#     counts <- table(mtcars$vs, mtcars$gear)\n#     > counts\n#     \n#     3  4  5\n#     0 12  2  4\n#     1  3 10  1\n    \n#         plot(attrition ~ benefits, lwd = 3, col = \"cyan\")\n#         lines(benefits,attrition, col = \"black\")\n#     \n#     plot(attrition ~ benefits, lwd = 3, col = \"cyan\")\n#     lines(benefits,attrition, col = \"pink\")\n    \n#     plot(attrition ~ benefits, lwd = 3, col = \"cyan\")\n#     lines(benefits,attrition, col = \"yellow\")\n    \n#     plot(wt,mpg, main=\"Scatterplot of wt vs. mpg\")\n#     plot(wt,disp, main=\"Scatterplot of wt vs disp\")\n#     hist(wt, main=\"Histogram of wt\")\n#     boxplot(wt, main=\"Boxplot of wt\")\n        \n    \n    \n#     plot(attrition ~ benefits, lwd = 3, col = \"cyan\")\n#     lines(benefits,attrition, col = \"blue\")\n#     \n#     plot(attrition ~ benefits, lwd = 3, col = \"cyan\")\n#     lines(benefits,attrition, col = \"black\")\n    \n    \n#     # generate bins based on input$bins from ui.R\n#     x    <- faithful[, 2] \n#     bins <- seq(min(x), max(x), length.out = input$bins + 1)\n#     \n#     # draw the histogram with the specified number of bins\n#     hist(x, breaks = bins, col = 'darkgray', border = 'white')\n#     \n  })\n  \n})\n    ",
    "created" : 1415754565897.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4002985534",
    "id" : "42135C18",
    "lastKnownWriteTime" : 1415845056,
    "path" : "C:/Develop/datascience/coursera/Data Products/BenefitsSimulation/BenefitsSimulation/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}